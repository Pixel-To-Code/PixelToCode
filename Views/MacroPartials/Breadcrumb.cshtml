@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@using Simplismo
@{
    var root = CurrentPage.AncestorOrSelf(1);

    string twitterLink = "";
    string facebookLink = "";
    string linkedInLink = "";
    string youtubeLink = "";

    if (root != null)
    {
        twitterLink = root.TwitterLink == null ? "" : root.TwitterLink;
        facebookLink = root.FacebookLink == null ? "" : root.FacebookLink;
        linkedInLink = root.LinkedInLink == null ? "" : root.LinkedInLink;
        youtubeLink = root.YoutubeChannelLink == null ? "" : root.YoutubeChannelLink;
    }
}

@*
    This snippet makes a breadcrumb of parents using an unordred html list.

    How it works:
    - It uses the Ancestors() method to get all parents and then generates links so the visitor get go back
    - Finally it outputs the name of the current page (without a link)
*@

<div class="row">
    <div class="@Grid.Cols(Grid.Md, 12)">
        @if (CurrentPage.Ancestors().Any())
        {
            <nav class="clearfix" style="clear: both;">
                <ul class="breadcrumb">
                    <li><a href="/">@CurrentPage.AncestorOrSelf(1).GetPropertyValue("title")</a></li>
                    @* For each page in the ancestors collection which have been ordered by Level (so we start with the highest top node first) *@
                    @foreach (var page in CurrentPage.Ancestors("Page").OrderBy("Level"))
                    {
                        <li><a href="@page.Url">@page.Name</a></li>
                    }
                    @* Display the current page as the last item in the list *@
                    <li class="active">@CurrentPage.Name</li>
                </ul>
            </nav>
        }
        else
        {
            <p class="strapline">@CurrentPage.Strapline</p>
        }
</div>

    </div>